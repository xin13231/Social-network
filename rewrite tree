public class Analysis {
    public static void main(String[] args) {
        if (args.length != 1) {
            System.err.println("Usage: java Analysis <inputFile>");
            System.exit(1);
        }

        String inputFile = args[0];

        try {
            List<String> lines = readFile(inputFile);
            Map<String, Set<String>> followingTree = getFollowingTree(lines);
            Map<String, Set<String>> followerTree = getFollowerTree(lines);

     }
    }
  }


    private static Map<String, Set<String>> getFollowingTree(List<String> lines) {
        Map<String, Set<String>> followingTree = new HashMap<>();
        for (String line : lines) {
            String[] parts = line.split(" ");
            String person = parts[0];
            Set<String> follows = new HashSet<>(Arrays.asList(parts).subList(1, parts.length));
            followingTree.put(person, follows);
        }
        return followingTree;
    }


private static Map<String, Set<String>> getFollowerTree(List<String> lines){
        Map<String, Set<String>> followerTree = new HashMap<>();
        for (String line : lines) {
            String[] parts = line.split(" ");
            String person = parts[0];
            Set<String> follows = new HashSet<>(Arrays.asList(parts).subList(1, parts.length));
            for (String follow : follows) {
                Set<String> set = followerTree.getOrDefault(follow, new HashSet<>());
                set.add(person);
                followerTree.put(follow, set);
            }
        }
        return followerTree;
    }
